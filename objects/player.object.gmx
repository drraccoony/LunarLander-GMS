<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ship_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// ***ADJUSTABLE VARIABLES***

ship_width = 8;      // Vector size of Ship (Width)
ship_height = 30;    // Vector size of Ship (Height)
vert_thrust = 0.125; // Amount of vertical thrust
horz_thrust = 0.095; // Amount of horziontal thrust
fuel = 800;          // Starting Fuel
fuel_vertthrust = 6; // Vertical thrust fuel usage
fuel_horzthrust = 4; // Horziontal thrust fuel usage
fuel_warning = fuel/6; // Fuel warning threshold
score = 0;           // Reset Score
time = 0             // Set time zero

// ***DONT CHANGE THESE!***
fuel_warned = 0;    //Has fuel warning sound played?
final_vspeed = 0;    //Vert speed at time of crash / landing
final_hspeed = 0;    //Horz speed at time of crash / landing
started = 0;
landed = 0;
crash = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if landed = 0 and crash = 0{time+=1; score-=1000;}
alarm[0]=room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Start Gravity and interia speed once game starts
if keyboard_check(vk_anykey) and not keyboard_check(ord('R')) and started = 0{started = 1; gravity = 0.02; hspeed=choose(0.20,-0.20); vspeed=-0.10; alarm[0]=room_speed}

// Stop ship from moving after crash / land.
if landed = 1{vspeed = 0.00; gravity = 0; hspeed = 0.00; speed =0.00; exit}
if crash = 1{vspeed = 0.00; gravity = 0; hspeed = 0.00; speed =0.00; exit}

// Adjust the game angle depending on hspeed
view_angle[0]=hspeed/2

// Play audible alert when fuel is getting low
if fuel&lt;=fuel_warning and fuel_warned=0 {fuel_warned = 1;audio_play_sound(snd_lowfuel, 10, 0);}

//Log vspeed &amp; hspeed to a variable that can be shown after crash
if landed=0 or crash=0{final_vspeed = vspeed;final_hspeed = hspeed;}

// Keyboard Controls
if fuel&gt;0{
    if keyboard_check(vk_up){vspeed-=vert_thrust;fuel-=fuel_vertthrust;create_parti(x,y,15,random_range(260,280),3,"THRUST");}
    if keyboard_check(vk_right){hspeed-=horz_thrust;fuel-=fuel_horzthrust;create_parti(x,y,30,random_range(-10,10),3,"THRUST");}
    if keyboard_check(vk_left){hspeed+=horz_thrust;fuel-=fuel_horzthrust;create_parti(x,y,30,random_range(170,190),3,"THRUST");}
    if keyboard_check(vk_left) or keyboard_check(vk_right) or keyboard_check(vk_up){audio_play_sound(snd_thrust, 10, 0);}
}

// Score Calculatons
score = 5000+(fuel*50)-(time*10)
if score &lt; 0
score = 0;

// Dont let fuel go into negative
if fuel&lt;0 {fuel=0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font3);
draw_set_color(c_lime);
draw_set_halign(fa_center);
if y&lt;-6{
draw_triangle(x,4,x-8,12,x+8,12,0);
draw_text(x,18,round(y));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_triangle(x-ship_width,y,x+ship_width,y,x,y-ship_height,0);
draw_set_color(c_lime);
draw_triangle(x-ship_width,y,x+ship_width,y,x,y-ship_height,1);
draw_set_font(font1);

draw_set_color(c_white);
draw_set_halign(fa_left);
if started = 1{ 
draw_text(x+30,y-40,"VSpeed: "+string(vspeed));
/*draw_text(x+30,y-30,"HSpeed: "+string(hspeed));*/
draw_set_color(c_yellow);
draw_text(x+30,y-20,"Fuel: "+string(fuel));
draw_set_color(c_white);
draw_text(x+30,y-10,"Warning @ "+string(fuel_warning))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
